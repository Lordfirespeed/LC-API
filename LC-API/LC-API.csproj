<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.1;net472</TargetFrameworks>
    <AssemblyName>LC_API</AssemblyName>
    <Product>Lethal Company API</Product>
    <Description>Utilities for plugin devs</Description>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <LangVersion>latest</LangVersion>
    <RestoreAdditionalProjectSources>
      https://api.nuget.org/v3/index.json;
      https://nuget.bepinex.dev/v3/index.json;
      https://nuget.samboy.dev/v3/index.json
    </RestoreAdditionalProjectSources>
    <RootNamespace>LC_API</RootNamespace>
    <GenerateDocumentationFile>True</GenerateDocumentationFile>
    <MinVerTagPrefix>v</MinVerTagPrefix>
  </PropertyGroup>
  
  <!-- NuGet package metadata -->
  <PropertyGroup>
    <PackageId>LethalCompany.LC-API</PackageId>
    <Authors>2018,steven4547466</Authors>
    <Company>2018</Company>
  </PropertyGroup>

  <PropertyGroup>
    <OutputPath>bin</OutputPath>
  </PropertyGroup>

  <!-- prevent referenced assemblies from being copied to the output folder -->
  <Target Name="ClearReferenceCopyLocalPaths" AfterTargets="ResolveAssemblyReferences">
    <ItemGroup>
      <ReferenceCopyLocalPaths Remove="@(ReferenceCopyLocalPaths)" />
    </ItemGroup>
  </Target>

  <ItemGroup>
    <PackageReference Include="BepInEx.Analyzers" Version="1.*" PrivateAssets="all" />
    <PackageReference Include="BepInEx.Core" Version="5.*" />
    <PackageReference Include="BepInEx.PluginInfoProps" Version="2.*" />
    <PackageReference Include="MinVer" Version="4.3.0">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="UnityEngine.Modules" Version="2022.3.9" IncludeAssets="compile" />
    <PackageReference Include="BepInEx.AssemblyPublicizer.MSBuild" Version="0.4.1" PrivateAssets="all" />
  </ItemGroup>
  
  <ItemGroup Condition="'$(TargetFramework.TrimEnd(`0123456789`))' == 'net'">
    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.2" PrivateAssets="all" />
  </ItemGroup>
  
  <ItemGroup Condition="$(CI) != 'true'">
    <Reference Include="Assembly-CSharp" Publicize="true">
      <HintPath>$(LETHAL_COMPANY_DIR)\Lethal Company_Data\Managed\Assembly-CSharp.dll</HintPath>
    </Reference>
    <Reference Include="Facepunch.Steamworks.Win64">
      <HintPath>$(LETHAL_COMPANY_DIR)\Lethal Company_Data\Managed\Facepunch.Steamworks.Win64.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json">
      <HintPath>$(LETHAL_COMPANY_DIR)\Lethal Company_Data\Managed\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="Unity.InputSystem">
      <HintPath>$(LETHAL_COMPANY_DIR)\Lethal Company_Data\Managed\Unity.InputSystem.dll</HintPath>
    </Reference>
    <Reference Include="Unity.Netcode.Runtime">
      <HintPath>$(LETHAL_COMPANY_DIR)\Lethal Company_Data\Managed\Unity.Netcode.Runtime.dll</HintPath>
    </Reference>
    <Reference Include="Unity.TextMeshPro">
      <HintPath>$(LETHAL_COMPANY_DIR)\Lethal Company_Data\Managed\Unity.TextMeshPro.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UI">
      <HintPath>$(LETHAL_COMPANY_DIR)\Lethal Company_Data\Managed\UnityEngine.UI.dll</HintPath>
    </Reference>
  </ItemGroup>
  
  <ItemGroup Condition="$(CI) == 'true'">
    <PackageReference Include="LethalCompany.GameLibs.Steam" Version="45.0.2-alpha.1" />
  </ItemGroup>

  <PropertyGroup Condition="$(CI) == 'true'">
    <PACK_THUNDERSTORE>true</PACK_THUNDERSTORE>
  </PropertyGroup>
  
  <Target Name="SetPluginVersion" BeforeTargets="AddGeneratedFile" DependsOnTargets="MinVer">
    <Message Importance="high" Text="MinVer version is $(MinVerVersion)" />
    <PropertyGroup>
      <BepInExPluginVersion>$(MinVerMajor).$(MinVerMinor).$(MinVerPatch)</BepInExPluginVersion>
    </PropertyGroup>
  </Target>
  
  <Target Name="NetcodeWeave" AfterTargets="PostBuildEvent">
    <CallTarget Condition="$(OS) == 'Windows_NT'" Targets="NetcodeWeaveWindows" />
    <CallTarget Condition="$(OS) != 'Windows_NT'" Targets="NetcodeWeaveUnix" />
    <Message Importance="high" Text="Successfully weaved NetCode!" />
  </Target>
  
  <Target Name="NetcodeWeaveWindows">
    <Exec Command="cd $(NETCODE_PATCHER_DIR)&#xD;&#xA;NetcodePatcher.dll $(TargetDir) deps/" />
  </Target>
  
  <Target Name="NetcodeWeaveUnix">
    <Exec Command="cd $(NETCODE_PATCHER_DIR)&#xD;&#xA;dotnet NetcodePatcher.dll $(TargetDir) deps/" />
  </Target>

  <Target Name="PackThunderstore" AfterTargets="NetcodeWeave" Condition="$(PACK_THUNDERSTORE) == 'true' and $(TargetFramework) == 'netstandard2.1'">
    <Message Importance="high" Text="MinVer version is $(MinVerVersion)" />
    <PropertyGroup>
      <PlainVersion>$(MinVerMajor).$(MinVerMinor).$(MinVerPatch)</PlainVersion>
    </PropertyGroup>
    <Exec Command="tcli build --config-path $(SolutionDir)assets/thunderstore.toml --package-version $(PlainVersion)" />
    <ItemGroup>
      <FilesToRename Include="$(SolutionDir)dist/*-$(PlainVersion).zip" />
    </ItemGroup>
    <Move SourceFiles="@(FilesToRename)" DestinationFiles="@(FilesToRename -&gt; Replace($(PlainVersion), $(MinVerVersion)))" />
  </Target>
</Project>
